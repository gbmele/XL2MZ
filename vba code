Function darksider_con(rng As Range) As String
  Dim cell As Range
  Dim result As String
  For Each cell In rng
    result = result & cell.Value & ","
  Next
  darksider_con = result
End Function


Function mm(v As String)
  Select Case v
   Case "A", "AM", "a", "am", "A 08:00-16:30", "A 08:00-17:00", "A 08:00-18:00", "A 08:00-16:00"
    mm = 1
    
   Case "i", "I"
    mm = 11
    
   Case "s", "S"
    mm = 12
   
    
   Case "P", "PM", "A 14:00-23:59", "A 16:00-23:59", "p"
    mm = 2
    
   Case "AP", "A 00:00-23:59"
    mm = 3
   
   Case "CS", "C", "c", "cs"
    mm = 4
   
   Case "O", "o", "0"
    mm = "0"
   
   'LEAVE
   Case "AL"


    mm = 41
   
   Case "CL"   'conference
    mm = 42
   
   Case "LSL", "LPPA"
    mm = 43
   
   Case "PAT"
    mm = 44
   
   Case "MAT"
    mm = 45
   
   Case "LWOP"
    mm = 46
    
   Case "PERL"  ' personal leave
    mm = 47
   
   
   Case "U", "U 08:00-16:30", "U 08:00-17:00", "U 00:00-23:59", "u"

    mm = 99
    
   Case "UA"
    mm = 91
   
   Case "UP"
    mm = 92
   
   Case "77"
    mm = 77
   
   Case "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8"
    mm = v
   
   Case "OTH"
    mm = 0
    
   Case Else
    mm = "FAIL------------------------------------------------------------------------->" & v
  End Select
  
End Function


Function count_leave(v As String)
  Select Case v
      Case "AL", "CL", "LSL", "PAT", "MAT", "LPPA", "LWOP", "PERL"
        count_leave = 1
      Case Else
        count_leave = 0
  End Select

End Function



Function get_dispatch()
result = ""
result = result & "constraint forall(doc in tempdocs , day in 1..DAYS)" & vbCrLf & vbCrLf & vbCrLf
result = result & "(  if    REQUESTS[ doc, day ] = 99   then   roster[ doc, day ]    =  o" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 41   then   roster[ doc, day ]    =  l  % AL" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 42   then   roster[ doc, day ]    =  l  % CONF" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 43   then   roster[ doc, day ]    =  l  % LSL" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 44   then   roster[ doc, day ]    =  l  % PAT" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 45   then   roster[ doc, day ]    =  l  % MAT" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 46   then   roster[ doc, day ]    =  l  % LWOP" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 47   then   roster[ doc, day ]    =  l  % PERSONAL LEAVE" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 4    then   roster[ doc, day ]    =  c  % csupport" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 1    then   roster[ doc, day ]    =  a" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 2    then   roster[ doc, day ]    =  p" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 3    then  (roster[ doc, day ]    =  p \/ roster[doc,day]= a)" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 91   then   roster[ doc, day ]   !=  a" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 92   then   roster[ doc, day ]   !=  p" & vbCrLf
result = result & "  elseif REQUESTS[ doc, day ] = 99   then   roster[ doc, day ]    =  o" & vbCrLf
  
result = result & "  elseif doc in {CK,LS} then   if REQUESTS[doc,day]=0 then roster[doc,day]=o else true endif" & vbCrLf
      

result = result & "  else true " & vbCrLf
result = result & "   endif);" & vbCrLf & vbCrLf & vbCrLf

get_dispatch = result

End Function



Function make_separate_arrays(rng As Range) As String
Dim cell As Range
  Dim result As String
  Dim requests As String
  
  Dim leave_count_constraint As String
  Dim leave_counter As Integer
  
  
  Dim doc As String
  Dim ctr As Integer
  
   
  ctr = 0
  
  leave_count_constraint = ""
  leave_counter = 0
  
  ' DONT NEED DISPATCH
  'result = result & get_dispatch() & vbCrLf
  
  requests = requests & "array[docs,1..70] of var int: REQUESTS;" & vbCrLf
  
  For Each cell In rng
    
    Let ctr = ctr + 1
    
    If ctr Mod 70 = 1 Then
     doc = cell.Offset(0, -1).Value
     result = result & "array[1..70] of var int: " & doc & "_requests = array1d(1..70,[" & vbCrLf
    
     requests = requests & "constraint REQUESTS[" & doc & ",1..70] = " & doc & "_requests;" & vbCrLf
    
    End If
    
    If ctr Mod 7 = 0 Then
      
      result = result & mm(cell.Value) & "," & vbTab & "% day " & ctr Mod 70 & " " & doc & vbCrLf
    Else
      result = result & mm(cell.Value) & "," & vbTab
    End If
    
    leave_counter = leave_counter + count_leave(cell.Value)
    
    
    If ctr Mod 70 = 0 Then result = result & "                            %leave count " & doc & " is " & leave_counter & vbCrLf & vbCrLf
    If ctr Mod 70 = 0 Then result = result & " ]); % end of array for doc " & doc & vbCrLf & vbCrLf
               
               
    If ctr Mod 70 = 0 Then
             leave_count_constraint = leave_count_constraint & "constraint count(roster[" & doc & ",..],l) = " & leave_counter & ";" & vbCrLf
    End If
    If ctr Mod 70 = 0 Then leave_counter = 0
    
    
    
  Next cell
  
    Open ThisWorkbook.Path & "\this_month.dzn" For Output As #1   ' when doing again and again just over-writes
    
   
   
    Print #1, result
    'Print #1, leave_count_constraint & vbCrLf & vbCrLf
    Print #1, requests
    Print #1, "%%% put the dates function next"
    
    Close #1
      
  
  make_separate_arrays = result
  
  
  Debug.Print result

  Debug.Print leave_count_constraint & vbCrLf & vbCrLf
  
  Debug.Print requests
  
  Debug.Print "%%% put the dates function next"
  
  




End Function


Function make_dates(rng As Range)
     Dim result As String
     Dim ctr As Integer
     Dim date_str As String
     
     result = ""
     ctr = 0
     
     For Each cell In rng
       cell.NumberFormat = "dd/mm/yyyy"
       
       ctr = ctr + 1
       If ctr = 1 Then
          result = result & "if     d = 1 then " & Chr(34) & Format(cell.Value, "dd/mm/yyyy") & Chr(34) & vbCrLf
        Else
       result = result & "elseif d = " & ctr & " then " & Chr(34) & Format(cell.Value, "dd/mm/yyyy") & Chr(34) & vbCrLf
        End If
     Next
     result = "function string: get_day(days: d) = " & vbCrLf & result
               
     result = result & "else " & vbTab & Chr(34) & "nuffin" & Chr(34) & vbCrLf
     
     result = result & "endif; % end of the big if"
          
    Debug.Print result
End Function


Function test_me(rng As Range)

  For Each cell In rng
    If cell.Value = "" Then cell.Value = 0
    
  Next

End Function

